<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<!-- 
		이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다.
		
		사용할 수 있는 기본적인 태그들
		<select>~~~</select>
		<insert>~~~</insert>
		<update>~~~</update>
		<delete>~~~</delete>
		
		위 태그에서 사용되는 주요 속성들
		
		1) id : 해당 태그를 호출할 때 namespace값과 연결하여 사용하는 이름
		
		2) parameterType : SQL문에 사용할 데이터가 들어있는 객체타입을 지정한다.
						   (보통 VO클래스, 자바의 기본자료형이름 등이 사용된다.)
						   (typeAlias로 지정한 alias명을 사용할 수고 있다.)
							
		3) resultType : select문을 실행한 결과를 담을 객체타입을 지정한다.
						(보통 VO클래스나 자바의 자료형이름을 사용한다.)	
						(typeAlias로 지정한 alias명을 사용할 수고 있다.)
						
	 	4) resultMap : 결과 레코드 컬럼명과 VO객체의 속성명이 다를 경우에 적절한 매핑을
	 				   위헤 사용한다.		
	 				   								
	 -->

		<insert id="insertMember" parameterType="kr.or.ddit.member.vo.MemberVO">
		
			 insert into mymember 
				    (mem_id, mem_name, mem_tel, mem_addr) 
				     values (#{memId}, #{memName}, #{memTel}, #{memAddr})		
		
		
		</insert>
	<update id="updateMember" parameterType="kr.or.ddit.member.vo.MemberVO">
	
	
	update mymember 
				 set mem_name = #{memName},
					 mem_tel = #{memTel},
					 mem_addr = #{memAddr}
					 where mem_id = #{memId}
	
	
	
	</update>


	<delete id="deleteMember" parameterType="String">

	delete from mymember where mem_id = #{신혜진}


</delete>
	
	    <resultMap type="memVO" id="memMap">
	    
		<result column="mem_id" property="memId"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_tel" property="memTel"/>
		<result column="mem_addr" property="memAddr"/>
		<result column="reg_dt" property="regDt"/>
	
	</resultMap>
	
	
	<select id="getAllMember" resultMap="memMap">
	
	  select *
		  from mymember
	
		 <!-- select mem_id as memId,
			   mem_name as memName,
			   mem_tel as memTel,
			   mem_addr as memAddr,
			   reg_dt as regDt
		  from mymember 
	 -->
	
	  
	
	</select>
	<select id="getMember" resultMap="memMap">
	
		select * from mymember
		where mem_id = #{정태일}
	
	</select>

<select id="getAllMember2" resultType="Map">
	
	  select *
		  from mymember
	
		 <!--  select mem_id as memId,
			   mem_name as memName,
			   mem_tel as memTel,
			   mem_addr as memAddr,
			   reg_dt as regDt
		  from mymember  -->
	

	  
	
	</select>
	
	<select id="checkMember" resultType = "int">
	
	 	select count(*) as cnt from mymember
	 	where mem_id = #{zz}
	 	</select>
	 	
	 	<select id="searchMember" resultMap="memMap">
	 	
	 		
	 		select * from mymember 	
	 		<where>
				<if test='memId != null and memId !=""'>
				and mem_id = #{memId}

				</if> 
				<if test='memName != null and memName != ""'>
				and mem_name = #{memName} 
				</if>		
	 			
	 			<if test='memTel != null and memTel != ""'>
	 			 and mem_tel = #{memTel}
	 			 
	 			</if>
	 			
	 			<if test='memAddr != null and !memAddr equils ""'>
	 			 and mem_addr like '%' || #{memAddr} || '%' 
	 			
	 			</if>
				
			   
	 	
	 		
	 		</where>
			
			
	 	
	 	</select>
</mapper>






















